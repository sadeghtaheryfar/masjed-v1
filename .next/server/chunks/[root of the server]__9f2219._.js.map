{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Asian/Documents/GitHub/masjed-v1/app/api/darkhast/route.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { NextResponse } from \"next/server\";\r\nimport { cookies } from \"next/headers\";\r\n\r\nexport const GET = async (req) => {\r\n    const token = cookies().get(\"token\")?.value;\r\n    try {\r\n        const { searchParams } = new URL(req.url);\r\n        const per_page = searchParams.get(\"per_page\") || 100;\r\n        const sort = searchParams.get(\"sort\") || \"created_at\";\r\n        const direction = searchParams.get(\"direction\") || \"desc\";\r\n        const status = searchParams.get(\"status\");\r\n        const q = searchParams.get(\"q\") || \"\";\r\n\r\n        const params = { per_page, sort, direction, q };\r\n        if (status) params.status = status;\r\n\r\n        const response = await axios.get(`${process.env.NEXT_PUBLIC_BASE_URL}/api/v1/requests`, {\r\n            params,\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: `bearer ${token}`,\r\n            },\r\n        });\r\n\r\n        return NextResponse.json(response.data, { status: response.status });\r\n    } catch (error) {\r\n        console.error(\"Error fetching banners:\", error);\r\n        throw error;\r\n    }\r\n};\r\n"],"names":[],"mappings":";;;AACA;AACA;AAFA;;;;AAIO,MAAM,MAAM,OAAO;IACtB,MAAM,QAAQ,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD,IAAI,GAAG,CAAC,UAAU;IACtC,IAAI;QACA,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG;QACxC,MAAM,WAAW,aAAa,GAAG,CAAC,eAAe;QACjD,MAAM,OAAO,aAAa,GAAG,CAAC,WAAW;QACzC,MAAM,YAAY,aAAa,GAAG,CAAC,gBAAgB;QACnD,MAAM,SAAS,aAAa,GAAG,CAAC;QAChC,MAAM,IAAI,aAAa,GAAG,CAAC,QAAQ;QAEnC,MAAM,SAAS;YAAE;YAAU;YAAM;YAAW;QAAE;QAC9C,IAAI,QAAQ,OAAO,MAAM,GAAG;QAE5B,MAAM,WAAW,MAAM,uIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,kEAAoC,gBAAgB,CAAC,EAAE;YACpF;YACA,SAAS;gBACL,QAAQ;gBACR,eAAe,CAAC,OAAO,EAAE,OAAO;YACpC;QACJ;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,SAAS,IAAI,EAAE;YAAE,QAAQ,SAAS,MAAM;QAAC;IACtE,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,2BAA2B;QACzC,MAAM;IACV;AACJ"}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}